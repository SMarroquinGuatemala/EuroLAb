using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using ClassLibraryEuroLab;
using EuroLab.Helpers;

namespace EuroLab
{
    public partial class FrmEnvio : Form
    {
        Envio envio = new Envio();
        Cliente cliente = new Cliente();
        Vendedor vendedor = new Vendedor();
        Departamento departamento = new Departamento();
        Municipio municipio = new Municipio();
        TipoDePago tipoDePago = new TipoDePago();
        Producto producto = new Producto();
        int? EnvioIdValue;

        public  ModoFormulario modoFormulario { get; set; }
        public enum ModoFormulario
        {
            Grabar=1,
            Modificar=2
        }

        public FrmEnvio(ModoFormulario modo, int? EnvioID)
        {
            InitializeComponent();
            modoFormulario = modo;
            EnvioIdValue = EnvioID;
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
          
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            try
            {

            
            ActiveControl = deFecha;
            //deFecha.Properties.TodayDate = DateTime.Now;
            deFecha.DateTime = DateTime.Now;

            //envio.BasesDeDatos();
            FillClientes();
            FillVendedores();
            FillDepartamentos();
            //FillMunicipios();
            FillTiposDePago();
            FillProductos();
            if (modoFormulario==ModoFormulario.Grabar)
            {
                LoadDetalleTemporal();
            }
            if (modoFormulario==ModoFormulario.Modificar)
            {
                DataTable dataTable;
                dataTable =envio.GetDataByKey((int)EnvioIdValue);
                //Tables[0].Rows[0]["NumeroEnvio"]
                deFecha.DateTime =(DateTime)dataTable.Rows[0]["Fecha"];
                txtEnvio.Text= dataTable.Rows[0]["NumeroDeEnvio"].ToString();
                cboClientes.EditValue = (int)dataTable.Rows[0]["ClienteID"];
                if (!string.IsNullOrEmpty( dataTable.Rows[0]["VendedorID"].ToString()))
                {
                    cboVendedor.EditValue = (int)dataTable.Rows[0]["VendedorID"];
                }
                if (!String.IsNullOrEmpty( dataTable.Rows[0]["DepartamentoID"].ToString()))
                {
                    cboDepartamento.EditValue = (int)dataTable.Rows[0]["DepartamentoID"];
                }
                if (!String.IsNullOrEmpty( dataTable.Rows[0]["MunicipioID"].ToString()))
                {
                    cboMunicipio.EditValue = (int)dataTable.Rows[0]["MunicipioID"];
                }
                if (!String.IsNullOrEmpty( dataTable.Rows[0]["TipoDePagoID"].ToString()))
                {
                    cboTipoDePago.EditValue = (int)dataTable.Rows[0]["TipoDePagoID"];
                }                                
                
                txtCodigo.Text= dataTable.Rows[0]["Codigo"].ToString();
                grdArticulos.DataSource = envio.GetAllDetalle(Convert.ToInt32(EnvioIdValue));


            }

            }
            catch (Exception ex)
            {

                Log.Add(ex);
            }
        }

        private void FillClientes()
        {
            cliente = new Cliente();
            //ContratosDAL db = new ContratosDAL();
            cboClientes.Properties.View.GridControl.ForceInitialize();
            cboClientes.Properties.BestFitMode = DevExpress.XtraEditors.Controls.BestFitMode.BestFitResizePopup;
            cboClientes.Properties.DataSource = cliente.GetAll();
            cboClientes.Properties.DisplayMember = "NombreCompleto";
            cboClientes.Properties.ValueMember = "ClienteID";

            cboClientes.Properties.PopulateViewColumns();
        }


        private void FillVendedores()
        {
            vendedor = new Vendedor();
            
            cboVendedor.Properties.View.GridControl.ForceInitialize();
            cboVendedor.Properties.BestFitMode = DevExpress.XtraEditors.Controls.BestFitMode.BestFitResizePopup;
            cboVendedor.Properties.DataSource = vendedor.GetAll();
            cboVendedor.Properties.DisplayMember = "NombreCompleto";
            cboVendedor.Properties.ValueMember = "VendedorID";

            cboVendedor.Properties.PopulateViewColumns();
        }

        private void FillDepartamentos()
        {
            departamento = new Departamento();

            cboDepartamento.Properties.View.GridControl.ForceInitialize();
            cboDepartamento.Properties.BestFitMode = DevExpress.XtraEditors.Controls.BestFitMode.BestFitResizePopup;
            cboDepartamento.Properties.DataSource = departamento.GetDepartamentos();
            cboDepartamento.Properties.DisplayMember = "Nombre";
            cboDepartamento.Properties.ValueMember = "DepartamentoID";
            cboDepartamento.Properties.PopulateViewColumns();
        }


        private void FillMunicipios()
        {
            municipio = new Municipio();

            cboMunicipio.Properties.View.GridControl.ForceInitialize();
            cboMunicipio.Properties.BestFitMode = DevExpress.XtraEditors.Controls.BestFitMode.BestFitResizePopup;
            cboMunicipio.Properties.DataSource = municipio.GetAll();
            cboMunicipio.Properties.DisplayMember = "Nombre";
            cboMunicipio.Properties.ValueMember = "MunicipioID";
            cboMunicipio.Properties.PopulateViewColumns();
        }

        private void FillMunicipiosPorDepartamento(int DepartamentoID )
        {
            municipio = new Municipio();

            cboMunicipio.Properties.View.GridControl.ForceInitialize();
            cboMunicipio.Properties.BestFitMode = DevExpress.XtraEditors.Controls.BestFitMode.BestFitResizePopup;
            cboMunicipio.Properties.DataSource = municipio.GetAllByDepartamento(DepartamentoID);
            cboMunicipio.Properties.DisplayMember = "Nombre";
            cboMunicipio.Properties.ValueMember = "MunicipioID";
            cboMunicipio.Properties.PopulateViewColumns();
        }

        private void FillTiposDePago()
        {
            tipoDePago = new TipoDePago();

            cboTipoDePago.Properties.View.GridControl.ForceInitialize();
            cboTipoDePago.Properties.BestFitMode = DevExpress.XtraEditors.Controls.BestFitMode.BestFitResizePopup;
            cboTipoDePago.Properties.DataSource = tipoDePago.GetAll();
            cboTipoDePago.Properties.DisplayMember = "Nombre";
            cboTipoDePago.Properties.ValueMember = "TipoDePagoID";
            cboTipoDePago.Properties.PopulateViewColumns();
        }

        private void FillProductos()
        {
            producto = new Producto();

            cboProducto.Properties.View.GridControl.ForceInitialize();
            cboProducto.Properties.BestFitMode = DevExpress.XtraEditors.Controls.BestFitMode.BestFitResizePopup;
            cboProducto.Properties.DataSource = producto.GetAll();
            cboProducto.Properties.DisplayMember = "Nombre";
            cboProducto.Properties.ValueMember = "ProductoID";
            cboProducto.Properties.PopulateViewColumns();
        }

        private void cboDepartamento_EditValueChanged(object sender, EventArgs e)
        {
            if (cboDepartamento.EditValue != null)
            {
                if (!string.IsNullOrEmpty(cboDepartamento.EditValue.ToString()))
                {
                    FillMunicipiosPorDepartamento(Convert.ToInt16(cboDepartamento.EditValue));
                }
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                if (cboProducto.EditValue == null)
                {
                    MessageBox.Show("Debe seleccionar un producto", "Mensaje del sistema");
                    cboProducto.Focus();
                }
                else
	            {
                    if (String.IsNullOrEmpty(TxtCantidad.Text.ToString()) || TxtCantidad.Text == "0" || Convert.ToInt32(TxtCantidad.Text) < 0)
                    {
                        MessageBox.Show("Debe ingresar una cantidad valida", "Mensaje del sistema");
                        TxtCantidad.Focus();
                    }
                    else
                    {
                        if (modoFormulario == ModoFormulario.Grabar)
                        {
                            envio.SaveDetailTemporal( Convert.ToInt32(cboClientes.EditValue), Convert.ToInt32(cboProducto.EditValue), Convert.ToInt32(TxtCantidad.Text));
                            LoadDetalleTemporal();
                        }
                        else
                        {
                            envio.SaveDetail(Convert.ToInt32(cboProducto.EditValue), Convert.ToInt32(TxtCantidad.Text), Convert.ToInt32(EnvioIdValue));
                            LoadDetalle(Convert.ToInt32(EnvioIdValue));
                        }                        
                        cboProducto.EditValue =null;
                        TxtCantidad.ResetText();
                        cboProducto.Focus();
                    }
                }
            }
            catch (Exception ex)
            {

                Log.Add(ex);
            }
        }

        private void LoadDetalleTemporal()
        {
            DataTable dataTable = new DataTable();
            dataTable = envio.GetDetalleTemporal();
            grdArticulos.DataSource = dataTable;
            lblTotalEnvio.Text = dataTable.Compute("Sum(SubTotal)","").ToString();

        }

        private void LoadDetalle(int EnvioID)
        {
            DataTable dataTable = new DataTable();
            dataTable = envio.GetAllDetalle(EnvioID);
            grdArticulos.DataSource = dataTable;
            lblTotalEnvio.Text = dataTable.Compute("Sum(SubTotal)", "").ToString();

        }

        private void button1_Click_1(object sender, EventArgs e)
        {
            try
            {
                if (deFecha.DateTime == null || String.IsNullOrEmpty(deFecha.Text))
                { 
                    MessageBox.Show("Debe ingresar una fecha", "Mensaje del sistema");
                    deFecha.Focus();
                    return;
                }

                if (cboClientes.EditValue == null)
                {
                    MessageBox.Show("Debe seleccionar un cliente", "Mensaje del sistema");
                    cboClientes.Focus();
                    return;
                }

                int? VendedorID = null;
                VendedorID = !String.IsNullOrEmpty(Convert.ToString(cboVendedor.EditValue)) ? Convert.ToInt32(cboVendedor.EditValue) : (int?)null;

                int? MunicipioID = null;
                MunicipioID = !String.IsNullOrEmpty(Convert.ToString(cboMunicipio.EditValue)) ? Convert.ToInt32(cboMunicipio.EditValue) : (int?)null;

                int? TipoDePagoID = null;
                TipoDePagoID = !String.IsNullOrEmpty(Convert.ToString(cboTipoDePago.EditValue)) ? Convert.ToInt32(cboTipoDePago.EditValue) : (int?)null;

                string Codigo = null;
                Codigo = !String.IsNullOrEmpty(Convert.ToString(txtCodigo.Text)) ? txtCodigo.Text : null;

                int? EnvioID = null;
                EnvioID = !String.IsNullOrEmpty(Convert.ToString(txtEnvio.Text)) ? Convert.ToInt32(txtEnvio.Text) : (int?)null;

                envio = new Envio();
                
                if (modoFormulario == ModoFormulario.Grabar)
                {
                    txtEnvio.Text = envio.Save(deFecha.DateTime, Convert.ToInt32(cboClientes.EditValue), VendedorID, MunicipioID, TipoDePagoID, EnvioID, Codigo).ToString();
                    
                    MessageBox.Show(string.Concat("Envio con el numero: ", txtEnvio.Text, " grabado correctamente"), "Mensaje del sistema");
                    modoFormulario = ModoFormulario.Modificar;
                    EnvioIdValue = envio.EnvioID();
                    LoadDetalle(Convert.ToInt32(EnvioIdValue));
                }
                else
                {
                    envio.Save(deFecha.DateTime, Convert.ToInt32(cboClientes.EditValue), VendedorID, MunicipioID, TipoDePagoID, EnvioIdValue, Codigo).ToString();
                    LoadDetalle( Convert.ToInt32(EnvioIdValue));
                    MessageBox.Show(string.Concat("Envio con el   numero: ", txtEnvio.Text, " modificado correctamente"), "Mensaje del sistema");
                }
                
            }
            catch (Exception ex)
            {

                Log.Add(ex);
            }
        }

        //private bool ValidaIngreoDeDatos()
        //{
        //    if (deFecha.DateTime == null || cboClientes.EditValue == null)
        //    {
        //        return false;
        //    }
        //    return true;
        //}
            

        private void button2_Click(object sender, EventArgs e)
        {
            if (!String.IsNullOrEmpty(txtEnvio.Text))
            {
                Form form = new Reportes.FrmReportViewer(Convert.ToInt32(EnvioIdValue));
                //Form form = new Reportes.FrmReportViewer(Convert.ToInt32(6));
                form.Show();
            }
            else
            {
                MessageBox.Show(string.Concat("No existe envío para imprimir"), "Mensaje del sistema");
            }
            
        }

        private void mnuEliminar_Click(object sender, EventArgs e)
        {
            try
            {
                object EnvioDetalleValue = 0;
                EnvioDetalleValue = ViewPrincipal.GetRowCellValue(ViewPrincipal.FocusedRowHandle, EnvioDetalle);
                if (modoFormulario == ModoFormulario.Grabar)
                {
                    
                    envio.DeleteDetailTemporal(Convert.ToInt32(EnvioDetalleValue), Environment.MachineName);
                    LoadDetalleTemporal();
                }
                else
                {
                    envio.DeleteDetail(Convert.ToInt32(EnvioDetalleValue));
                    LoadDetalle(Convert.ToInt32(EnvioIdValue));
                }

            }
            catch (Exception ex)
            {
                Log.Add(ex); 
            }
        }
    }


       
    
}
